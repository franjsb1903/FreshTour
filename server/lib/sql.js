const sql = {};

sql.planificacions = {};
sql.planificacions.new = "INSERT INTO fresh_tour.planificacions (id_usuario, titulo, comentario, esta_compartida, valoracion, distancia, tempo_visita, tempo_ruta) VALUES ($1, $2, $3, $4, 0, $5, $6, $7) RETURNING id";
sql.planificacions.newLugares = "INSERT INTO fresh_tour.planificacions_lugares_turisticos (id_planificacion, id_lugar_turistico, posicion_visita, tipo_visita) VALUES ";
sql.planificacions.newMonumentos = "INSERT INTO fresh_tour.planificacions_monumentos (id_planificacion, id_monumento, posicion_visita, tipo_visita) VALUES ";
sql.planificacions.newHospedaxe = "INSERT INTO fresh_tour.planificacions_lugares_hospedaxe (id_planificacion, id_lugar_hospedaxe, posicion_visita, duracion) VALUES ";
sql.planificacions.newHostalaria = "INSERT INTO fresh_tour.planificacions_lugares_hostalaria (id_planificacion, id_lugar_hostalaria, posicion_visita, duracion) VALUES ";
sql.planificacions.all = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p.id_usuario) AS usuario, $2 AS id_actual_usuario, 'Planificación' AS tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.planificacions_favoritas pf WHERE pf.id_planificacion = p.id AND pf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.planificacions p WHERE esta_compartida = true ORDER BY valoracion DESC"
sql.planificacions.share = "UPDATE fresh_tour.planificacions SET esta_compartida = $1 WHERE id = $2";
sql.planificacions.elementos = "SELECT *, 'Lugar turístico' AS tipo, (SELECT tipo_visita FROM fresh_tour.planificacions_lugares_turisticos plt WHERE plt.id_lugar_turistico = lt.id AND plt.id_planificacion = $1) as tipo_visita, (SELECT posicion_visita FROM fresh_tour.planificacions_lugares_turisticos plt WHERE plt.id_lugar_turistico = lt.id AND plt.id_planificacion = $1) as posicion_visita FROM fresh_tour.lugares_turisticos lt WHERE lt.id IN (SELECT id_lugar_turistico FROM fresh_tour.planificacions_lugares_turisticos plt WHERE plt.id_planificacion = $1) UNION all SELECT *, 'Monumento' AS tipo, (SELECT tipo_visita FROM fresh_tour.planificacions_monumentos pm WHERE pm.id_monumento = m.id AND pm.id_planificacion = $1) as tipo_visita, (SELECT posicion_visita FROM fresh_tour.planificacions_monumentos pm WHERE pm.id_monumento = m.id AND pm.id_planificacion = $1) as posicion_visita FROM fresh_tour.monumentos m WHERE m.id IN (SELECT id_monumento FROM fresh_tour.planificacions_monumentos pm WHERE pm.id_planificacion = $1)"
sql.planificacions.lecer = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, (SELECT duracion FROM fresh_tour.planificacions_lugares_hospedaxe plh WHERE plh.id_lugar_hospedaxe = lh.id AND plh.id_planificacion = $1) as tipo_visita, (SELECT posicion_visita FROM fresh_tour.planificacions_lugares_hospedaxe plh WHERE plh.id_lugar_hospedaxe = lh.id AND plh.id_planificacion = $1) as posicion_visita FROM fresh_tour.lugares_hospedaxe lh WHERE lh.id IN (SELECT id_lugar_hospedaxe FROM fresh_tour.planificacions_lugares_hospedaxe plh WHERE plh.id_planificacion = $1) UNION ALL SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, (SELECT duracion FROM fresh_tour.planificacions_lugares_hostalaria plh WHERE plh.id_lugar_hostalaria = lh.id AND plh.id_planificacion = $1) as tipo_visita, (SELECT posicion_visita FROM fresh_tour.planificacions_lugares_hostalaria plh WHERE plh.id_lugar_hostalaria = lh.id AND plh.id_planificacion = $1) as posicion_visita FROM fresh_tour.lugares_hostalaria lh WHERE lh.id IN (SELECT id_lugar_hostalaria FROM fresh_tour.planificacions_lugares_hostalaria plh WHERE plh.id_planificacion = $1)"
sql.planificacions.delete = {}
sql.planificacions.delete.lugares = "DELETE FROM fresh_tour.planificacions_lugares_turisticos WHERE id_planificacion = $1";
sql.planificacions.delete.monumentos = "DELETE FROM fresh_tour.planificacions_monumentos WHERE id_planificacion = $1";
sql.planificacions.delete.hospedaxes = "DELETE FROM fresh_tour.planificacions_lugares_hospedaxe WHERE id_planificacion = $1";
sql.planificacions.delete.hostalaria = "DELETE FROM fresh_tour.planificacions_lugares_hostalaria WHERE id_planificacion = $1";
sql.planificacions.delete.planificacion = "DELETE FROM fresh_tour.planificacions WHERE id = $1";
sql.planificacions.delete.comentarios = "DELETE FROM fresh_tour.comentarios_valoracions_planificacions WHERE id_planificacion = $1";
sql.planificacions.delete.favoritas = "DELETE FROM fresh_tour.planificacions_favoritas WHERE id_planificacion = $1";
sql.planificacions.edit = "UPDATE fresh_tour.planificacions SET titulo = $1, comentario = $2 WHERE id = $3";
sql.planificacions.sortBy = {};
sql.planificacions.sortBy.valoracion = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p.id_usuario) AS usuario, $2 AS id_actual_usuario, 'Planificación' AS tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.planificacions_favoritas pf WHERE pf.id_planificacion = p.id AND pf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.planificacions p WHERE esta_compartida = true ORDER BY valoracion DESC";
sql.planificacions.sortBy.menorDistancia = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p.id_usuario) AS usuario, $2 AS id_actual_usuario, 'Planificación' AS tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.planificacions_favoritas pf WHERE pf.id_planificacion = p.id AND pf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.planificacions p WHERE esta_compartida = true ORDER BY distancia ASC";
sql.planificacions.sortBy.maiorDistancia = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p.id_usuario) AS usuario, $2 AS id_actual_usuario, 'Planificación' AS tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.planificacions_favoritas pf WHERE pf.id_planificacion = p.id AND pf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.planificacions p WHERE esta_compartida = true ORDER BY distancia DESC";
sql.planificacions.sortBy.maiorTempoVisita = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p.id_usuario) AS usuario, $2 AS id_actual_usuario, 'Planificación' AS tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.planificacions_favoritas pf WHERE pf.id_planificacion = p.id AND pf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.planificacions p WHERE esta_compartida = true ORDER BY tempo_visita DESC";
sql.planificacions.sortBy.menorTempoVisita = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p.id_usuario) AS usuario, $2 AS id_actual_usuario, 'Planificación' AS tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.planificacions_favoritas pf WHERE pf.id_planificacion = p.id AND pf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.planificacions p WHERE esta_compartida = true ORDER BY tempo_visita ASC";
sql.planificacions.sortBy.maiorTempoRuta = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p.id_usuario) AS usuario, $2 AS id_actual_usuario, 'Planificación' AS tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.planificacions_favoritas pf WHERE pf.id_planificacion = p.id AND pf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.planificacions p WHERE esta_compartida = true ORDER BY tempo_ruta DESC";
sql.planificacions.sortBy.menorTempoRuta = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p.id_usuario) AS usuario, $2 AS id_actual_usuario, 'Planificación' AS tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.planificacions_favoritas pf WHERE pf.id_planificacion = p.id AND pf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.planificacions p WHERE esta_compartida = true ORDER BY tempo_ruta ASC";
sql.planificacions.sortBy.menorTempoTotalRuta = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p.id_usuario) AS usuario, $2 AS id_actual_usuario, 'Planificación' AS tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.planificacions_favoritas pf WHERE pf.id_planificacion = p.id AND pf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.planificacions p WHERE esta_compartida = true ORDER BY (tempo_ruta+tempo_visita) ASC";
sql.planificacions.sortBy.maiorTempoTotalRuta = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p.id_usuario) AS usuario, $2 AS id_actual_usuario, 'Planificación' AS tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.planificacions_favoritas pf WHERE pf.id_planificacion = p.id AND pf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.planificacions p WHERE esta_compartida = true ORDER BY (tempo_ruta+tempo_visita) DESC";
sql.planificacions.fav = {};
sql.planificacions.fav.sortBy = {};
sql.planificacions.fav.sortBy.valoracion = "SELECT *,'Planificación' as tipo, true AS favorito, $2 AS id_actual_usuario FROM fresh_tour.planificacions p2 WHERE id IN ( SELECT id_planificacion FROM fresh_tour.planificacions_favoritas pf WHERE id_usuario = $1) ORDER BY valoracion DESC";
sql.planificacions.fav.sortBy.menorDistancia = "SELECT *,'Planificación' as tipo, true AS favorito, $2 AS id_actual_usuario FROM fresh_tour.planificacions p2 WHERE id IN ( SELECT id_planificacion FROM fresh_tour.planificacions_favoritas pf WHERE id_usuario = $1) ORDER BY distancia ASC";
sql.planificacions.fav.sortBy.maiorDistancia = "SELECT *,'Planificación' as tipo, true AS favorito, $2 AS id_actual_usuario FROM fresh_tour.planificacions p2 WHERE id IN ( SELECT id_planificacion FROM fresh_tour.planificacions_favoritas pf WHERE id_usuario = $1) ORDER BY distancia DESC";
sql.planificacions.fav.sortBy.maiorTempoVisita = "SELECT *,'Planificación' as tipo, true AS favorito, $2 AS id_actual_usuario FROM fresh_tour.planificacions p2 WHERE id IN ( SELECT id_planificacion FROM fresh_tour.planificacions_favoritas pf WHERE id_usuario = $1) ORDER BY tempo_visita DESC";
sql.planificacions.fav.sortBy.menorTempoVisita = "SELECT *,'Planificación' as tipo, true AS favorito, $2 AS id_actual_usuario FROM fresh_tour.planificacions p2 WHERE id IN ( SELECT id_planificacion FROM fresh_tour.planificacions_favoritas pf WHERE id_usuario = $1) ORDER BY tempo_visita ASC";
sql.planificacions.fav.sortBy.maiorTempoRuta = "SELECT *,'Planificación' as tipo, true AS favorito, $2 AS id_actual_usuario FROM fresh_tour.planificacions p2 WHERE id IN ( SELECT id_planificacion FROM fresh_tour.planificacions_favoritas pf WHERE id_usuario = $1) ORDER BY tempo_ruta DESC";
sql.planificacions.fav.sortBy.menorTempoRuta = "SELECT *,'Planificación' as tipo, true AS favorito, $2 AS id_actual_usuario FROM fresh_tour.planificacions p2 WHERE id IN ( SELECT id_planificacion FROM fresh_tour.planificacions_favoritas pf WHERE id_usuario = $1) ORDER BY tempo_ruta ASC";
sql.planificacions.fav.sortBy.menorTempoTotalRuta = "SELECT *,'Planificación' as tipo, true AS favorito, $2 AS id_actual_usuario FROM fresh_tour.planificacions p2 WHERE id IN ( SELECT id_planificacion FROM fresh_tour.planificacions_favoritas pf WHERE id_usuario = $1) ORDER BY (tempo_ruta+tempo_visita) ASC";
sql.planificacions.fav.sortBy.maiorTempoTotalRuta = "SELECT *,'Planificación' as tipo, true AS favorito, $2 AS id_actual_usuario FROM fresh_tour.planificacions p2 WHERE id IN ( SELECT id_planificacion FROM fresh_tour.planificacions_favoritas pf WHERE id_usuario = $1) ORDER BY (tempo_ruta+tempo_visita) DESC";
sql.planificacions.get = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p.id_usuario) AS usuario, $2 AS id_actual_usuario, 'Planificación' AS tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.planificacions_favoritas pf WHERE pf.id_planificacion = p.id AND pf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.planificacions p WHERE esta_compartida = true and (p.id in (select id_planificacion from fresh_tour.planificacions_lugares_turisticos plt where plt.id_lugar_turistico in (select id from fresh_tour.lugares_turisticos where lower(titulo) like lower($2)) or p.id in (select id_planificacion from fresh_tour.planificacions_monumentos pm where pm.id_monumento in (select id from fresh_tour.monumentos where lower(titulo) like lower($2)) or lower(p.titulo) like lower($2)) ORDER BY valoracion DESC"

sql.usuarios = {};
sql.usuarios.edit = "UPDATE fresh_tour.usuarios SET usuario=$1, nome=$2, apelidos=$3, email=$4, contrasinal=$5 WHERE id=$6 RETURNING usuario, nome, apelidos, email, to_char(data, 'DD-MM-YY') as data";
sql.usuarios.exists = "SELECT usuario, email FROM fresh_tour.usuarios WHERE usuario LIKE $1 OR email LIKE $2";
sql.usuarios.delete = {};
sql.usuarios.delete.lugaresFav = "DELETE FROM fresh_tour.lugares_turisticos_favoritos WHERE id_usuario = $1";
sql.usuarios.delete.monumentosFav = "DELETE FROM fresh_tour.monumentos_favoritos WHERE id_usuario = $1";
sql.usuarios.delete.planificacionsFav = "DELETE FROM fresh_tour.planificacions_favoritas WHERE id_usuario = $1";
sql.usuarios.delete.comentariosLugares = "DELETE FROM fresh_tour.comentarios_valoracions_lugares_turisticos WHERE id_usuario = $1 RETURNING id_lugar_turistico";
sql.usuarios.delete.comentariosMonumentos = "DELETE FROM fresh_tour.comentarios_valoracions_monumentos WHERE id_usuario = $1 RETURNING id_monumento";
sql.usuarios.delete.comentariosPlanificacions = "DELETE FROM fresh_tour.comentarios_valoracions_planificacions WHERE id_usuario = $1";
sql.usuarios.delete.planificacionsId = "SELECT id FROM fresh_tour.planificacions WHERE id_usuario = $1";
sql.usuarios.delete.user = "DELETE FROM fresh_tour.usuarios WHERE id = $1";
sql.usuarios.new = "INSERT INTO fresh_tour.usuarios (usuario, nome, apelidos, email, contrasinal, data) VALUES ($1, $2, $3, $4, $5, CURRENT_TIMESTAMP) RETURNING id, usuario, nome, apelidos, email, to_char(data, 'DD-MM-YY') as data";
sql.usuarios.get = {};
sql.usuarios.get.user = "SELECT id, usuario, nome, apelidos, email, contrasinal, to_char(data, 'DD-MM-YY') as data FROM fresh_tour.usuarios WHERE usuario LIKE $1 OR email LIKE $1";
sql.usuarios.get.byId = "SELECT id, usuario, nome, apelidos, email, to_char(data, 'DD-MM-YY') as data FROM fresh_tour.usuarios WHERE id = $1";
sql.usuarios.get.elementosFav = "SELECT *, 'Monumento' as tipo, true AS favorito FROM fresh_tour.monumentos m WHERE id IN ( SELECT id_monumento FROM fresh_tour.monumentos_favoritos mf WHERE id_usuario = $1) UNION ALL SELECT *, 'Lugar turístico' as tipo, true AS favorito FROM fresh_tour.lugares_turisticos lt WHERE id IN ( SELECT id_lugar_turistico FROM fresh_tour.lugares_turisticos_favoritos ltf WHERE id_usuario = $1)";
sql.usuarios.get.plansFav = "SELECT *, (SELECT usuario FROM fresh_tour.usuarios u WHERE id = p2.id_usuario) AS usuario, 'Planificación' as tipo, true AS favorito FROM fresh_tour.planificacions p2 WHERE id IN ( SELECT id_planificacion FROM fresh_tour.planificacions_favoritas pf WHERE id_usuario = $1)";
sql.usuarios.get.opinions = "SELECT id, id_usuario, titulo, to_char(data, 'DD-MM-YY') as data, valoracion, comentario, id_lugar_turistico as id_elemento,'Lugar turístico' as tipo, (select titulo from fresh_tour.lugares_turisticos where id = cvlt.id_lugar_turistico) as elemento FROM fresh_tour.comentarios_valoracions_lugares_turisticos cvlt WHERE id_usuario = $1 UNION ALL select id, id_usuario, titulo, to_char(data, 'DD-MM-YY') as data, valoracion, comentario, id_monumento as id_elemento, 'Monumento' as tipo, (select titulo from fresh_tour.monumentos where id = cvm.id_monumento) as elemento FROM fresh_tour.comentarios_valoracions_monumentos cvm WHERE id_usuario = $1 UNION ALL select id, id_usuario, titulo, to_char(data, 'DD-MM-YY') as data, valoracion, comentario, id_planificacion as id_elemento, 'Planificacion' as tipo, (select titulo from fresh_tour.planificacions where id = cvp.id_planificacion) FROM fresh_tour.comentarios_valoracions_planificacions cvp WHERE id_usuario = $1";
sql.usuarios.get.plans = "SELECT *, 'Planificación' as tipo FROM fresh_tour.planificacions p WHERE id_usuario = $1";
sql.usuarios.get.hospedaxeFav = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, true AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1)";
sql.usuarios.get.hostalariaFav = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, true AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1)";

sql.elementos = {};
sql.elementos.sortBy = {};
sql.elementos.sortBy.titulo = "SELECT *, 'Lugar turístico' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_turisticos_favoritos ltf WHERE ltf.id_lugar_turistico = lt.id AND ltf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_turisticos lt WHERE prezo is not NULL UNION ALL SELECT *, 'Monumento' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.monumentos_favoritos mf WHERE mf.id_monumento = m.id AND mf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.monumentos m WHERE m.prezo is not NULL ORDER BY titulo ASC"
sql.elementos.sortBy.valoracion = "SELECT *, 'Lugar turístico' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_turisticos_favoritos ltf WHERE ltf.id_lugar_turistico = lt.id AND ltf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_turisticos lt WHERE prezo is not NULL UNION ALL SELECT *, 'Monumento' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.monumentos_favoritos mf WHERE mf.id_monumento = m.id AND mf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.monumentos m WHERE m.prezo is not NULL ORDER BY valoracion DESC"
sql.elementos.updateValoracion = {};
sql.elementos.updateValoracion.mediaLugares = "SELECT avg(valoracion) as valoracion FROM fresh_tour.comentarios_valoracions_lugares_turisticos WHERE id_lugar_turistico = $1";
sql.elementos.updateValoracion.updateLugares = "UPDATE fresh_tour.lugares_turisticos SET valoracion = $1 WHERE id = $2"
sql.elementos.updateValoracion.mediaMonumentos = "SELECT avg(valoracion) as valoracion FROM fresh_tour.comentarios_valoracions_monumentos WHERE id_monumento = $1";
sql.elementos.updateValoracion.updateMonumentos = "UPDATE fresh_tour.monumentos SET valoracion = $1 WHERE id = $2"
sql.elementos.byName = "SELECT *, 'Lugar turístico' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_turisticos_favoritos ltf WHERE ltf.id_lugar_turistico = lt.id AND ltf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_turisticos lt WHERE lt.prezo is not NULL AND (lower(lt.titulo) LIKE lower($2)) UNION ALL SELECT *, 'Monumento' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.monumentos_favoritos mf WHERE mf.id_monumento = m.id AND mf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.monumentos m WHERE m.prezo is not NULL AND (lower(m.titulo) LIKE lower($2)) ORDER BY titulo ASC"
sql.elementos.favs = {};
sql.elementos.favs.sortBy = {};
sql.elementos.favs.sortBy.titulo = "SELECT *, 'Monumento' as tipo, true AS favorito FROM fresh_tour.monumentos m WHERE id IN ( SELECT id_monumento FROM fresh_tour.monumentos_favoritos mf WHERE id_usuario = $1) UNION ALL SELECT *, 'Lugar turístico' as tipo, true AS favorito FROM fresh_tour.lugares_turisticos lt WHERE id IN ( SELECT id_lugar_turistico FROM fresh_tour.lugares_turisticos_favoritos ltf WHERE id_usuario = $1) ORDER BY titulo ASC";
sql.elementos.favs.sortBy.valoracion = "SELECT *, 'Monumento' as tipo, true AS favorito FROM fresh_tour.monumentos m WHERE id IN ( SELECT id_monumento FROM fresh_tour.monumentos_favoritos mf WHERE id_usuario = $1) UNION ALL SELECT *, 'Lugar turístico' as tipo, true AS favorito FROM fresh_tour.lugares_turisticos lt WHERE id IN ( SELECT id_lugar_turistico FROM fresh_tour.lugares_turisticos_favoritos ltf WHERE id_usuario = $1) ORDER BY valoracion DESC";
sql.elementos.favs.new = {};
sql.elementos.favs.new.lugares = "INSERT INTO fresh_tour.lugares_turisticos_favoritos (id_usuario, id_lugar_turistico) values ($1, $2)";
sql.elementos.favs.new.monumentos = "INSERT INTO fresh_tour.monumentos_favoritos (id_usuario, id_monumento) values ($1, $2)";
sql.elementos.favs.new.planificacions = "INSERT INTO fresh_tour.planificacions_favoritas (id_usuario, id_planificacion) values ($1, $2)";
sql.elementos.favs.delete = {};
sql.elementos.favs.delete.lugares = "DELETE FROM fresh_tour.lugares_turisticos_favoritos WHERE id_usuario = $1 and id_lugar_turistico = $2";
sql.elementos.favs.delete.monumentos = "DELETE FROM fresh_tour.monumentos_favoritos WHERE id_usuario = $1 and id_monumento = $2";
sql.elementos.favs.delete.planificacions = "DELETE FROM fresh_tour.planificacions_favoritas WHERE id_usuario = $1 and id_planificacion = $2";
sql.elementos.favs.all = "SELECT *, 'Monumento' as tipo, true AS favorito FROM fresh_tour.monumentos m WHERE id IN ( SELECT id_monumento FROM fresh_tour.monumentos_favoritos mf WHERE id_usuario = $1) UNION ALL SELECT *, 'Lugar turístico' as tipo, true AS favorito FROM fresh_tour.lugares_turisticos lt WHERE id IN ( SELECT id_lugar_turistico FROM fresh_tour.lugares_turisticos_favoritos ltf WHERE id_usuario = $1)";
sql.elementos.favs.byName = "SELECT *, 'Monumento' as tipo, true AS favorito FROM fresh_tour.monumentos m WHERE id IN ( SELECT id_monumento FROM fresh_tour.monumentos_favoritos mf WHERE id_usuario = $1) and (lower(titulo) like lower($2)) UNION ALL SELECT *, 'Lugar turístico' as tipo, true AS favorito FROM fresh_tour.lugares_turisticos lt WHERE id IN ( SELECT id_lugar_turistico FROM fresh_tour.lugares_turisticos_favoritos ltf WHERE id_usuario = $1) and (lower(titulo) like lower($2))";

sql.opinions = {};
sql.opinions.get = {};
sql.opinions.get.lugares = {};
sql.opinions.get.lugares.get = "select cvlt.id, id_usuario, usuario, titulo, valoracion, comentario, id_lugar_turistico as id_elemento, to_char(data, 'DD-MM-YY') as data from fresh_tour.comentarios_valoracions_lugares_turisticos cvlt inner join (select id, usuario from fresh_tour.usuarios) as usuarios on cvlt.id_usuario = usuarios.id where cvlt.id_lugar_turistico = $1 order by data asc";
sql.opinions.get.lugares.count_valoracion = "select count(id) as count, avg(valoracion) as valoracion from fresh_tour.comentarios_valoracions_lugares_turisticos where id_lugar_turistico = $1";
sql.opinions.get.monumentos = {};
sql.opinions.get.monumentos.get = "select cvm.id, id_usuario, usuario, titulo, valoracion, comentario, id_monumento as id_elemento, to_char(data, 'DD-MM-YY') as data from fresh_tour.comentarios_valoracions_monumentos cvm inner join (select id, usuario from fresh_tour.usuarios) as usuarios on cvm.id_usuario = usuarios.id where cvm.id_monumento = $1 order by data asc";
sql.opinions.get.monumentos.count_valoracion = "select count(id) as count, avg(valoracion) as valoracion from fresh_tour.comentarios_valoracions_monumentos where id_monumento = $1";
sql.opinions.get.planificacions = {};
sql.opinions.get.planificacions.get = "select cvp.id, id_usuario, usuario, titulo, valoracion, comentario, id_planificacion as id_elemento, to_char(data, 'DD-MM-YY') as data from fresh_tour.comentarios_valoracions_planificacions cvp inner join (select id, usuario from fresh_tour.usuarios) as usuarios on cvp.id_usuario = usuarios.id where cvp.id_planificacion = $1 order by data asc";
sql.opinions.get.planificacions.count_valoracion = "select count(id) as count, avg(valoracion) as valoracion from fresh_tour.comentarios_valoracions_planificacions where id_planificacion = $1";
sql.opinions.get.hospedaxe = {};
sql.opinions.get.hospedaxe.get = "select cvlh.id, id_usuario, usuario, titulo, valoracion, comentario, id_lugar_hospedaxe as id_elemento, to_char(data, 'DD-MM-YY') as data from fresh_tour.comentarios_valoracions_lugares_hospedaxe cvlh inner join (select id, usuario from fresh_tour.usuarios) as usuarios on cvlh.id_usuario = usuarios.id where cvlh.id_lugar_hospedaxe = $1 order by data asc";
sql.opinions.get.hospedaxe.count_valoracion = "select count(id) as count, avg(valoracion) as valoracion from fresh_tour.comentarios_valoracions_lugares_hospedaxe where id_lugar_hospedaxe = $1";
sql.opinions.get.hostalaria = {};
sql.opinions.get.hostalaria.get = "select cvlh.id, id_usuario, usuario, titulo, valoracion, comentario, id_lugar_hostalaria as id_elemento, to_char(data, 'DD-MM-YY') as data from fresh_tour.comentarios_valoracions_lugares_hostalaria cvlh inner join (select id, usuario from fresh_tour.usuarios) as usuarios on cvlh.id_usuario = usuarios.id where cvlh.id_lugar_hostalaria = $1 order by data asc";
sql.opinions.get.hostalaria.count_valoracion = "select count(id) as count, avg(valoracion) as valoracion from fresh_tour.comentarios_valoracions_lugares_hostalaria where id_lugar_hostalaria = $1";
sql.opinions.exists = {};
sql.opinions.exists.lugares = "SELECT * FROM fresh_tour.comentarios_valoracions_lugares_turisticos WHERE id_usuario = $1 AND id_lugar_turistico = $2";
sql.opinions.exists.monumentos = "SELECT * FROM fresh_tour.comentarios_valoracions_monumentos WHERE id_usuario = $1 AND id_monumento = $2";
sql.opinions.exists.planificacions = "SELECT * FROM fresh_tour.comentarios_valoracions_planificacions WHERE id_usuario = $1 AND id_planificacion = $2";
sql.opinions.exists.hospedaxes = "SELECT * FROM fresh_tour.comentarios_valoracions_lugares_hospedaxe WHERE id_usuario = $1 AND id_lugar_hospedaxe = $2";
sql.opinions.exists.hostalaria = "SELECT * FROM fresh_tour.comentarios_valoracions_lugares_hostalaria WHERE id_usuario = $1 AND id_lugar_hostalaria = $2";
sql.opinions.new = {};
sql.opinions.new.lugares = {};
sql.opinions.new.lugares.insert = "INSERT INTO fresh_tour.comentarios_valoracions_lugares_turisticos(id_usuario, titulo, data, valoracion, comentario, id_lugar_turistico) values ($1, $2, CURRENT_TIMESTAMP, $3, $4, $5) RETURNING id, id_usuario, titulo, to_char(data, 'DD-MM-YY') as data, valoracion, comentario, id_lugar_turistico";
sql.opinions.new.lugares.media = "SELECT avg(valoracion) as valoracion FROM fresh_tour.comentarios_valoracions_lugares_turisticos WHERE id_lugar_turistico = $1";
sql.opinions.new.lugares.updateVal = "UPDATE fresh_tour.lugares_turisticos SET valoracion = $1 WHERE id = $2 RETURNING valoracion";
sql.opinions.new.monumentos = {};
sql.opinions.new.monumentos.insert = "INSERT INTO fresh_tour.comentarios_valoracions_monumentos(id_usuario, titulo, data, valoracion, comentario, id_monumento) values ($1, $2, CURRENT_TIMESTAMP, $3, $4, $5) RETURNING id, id_usuario, titulo, to_char(data, 'DD-MM-YY') as data, valoracion, comentario, id_monumento"
sql.opinions.new.monumentos.media = "SELECT avg(valoracion) as valoracion FROM fresh_tour.comentarios_valoracions_monumentos WHERE id_monumento = $1";
sql.opinions.new.monumentos.updateVal = "UPDATE fresh_tour.monumentos SET valoracion = $1 WHERE id = $2 RETURNING valoracion";
sql.opinions.new.planificacions = {};
sql.opinions.new.planificacions.insert = "INSERT INTO fresh_tour.comentarios_valoracions_planificacions(id_usuario, titulo, data, valoracion, comentario, id_planificacion) values ($1, $2, CURRENT_TIMESTAMP, $3, $4, $5) RETURNING id, id_usuario, titulo, to_char(data, 'DD-MM-YY') as data, valoracion, comentario, id_planificacion";
sql.opinions.new.planificacions.media = "SELECT avg(valoracion) as valoracion FROM fresh_tour.comentarios_valoracions_planificacions WHERE id_planificacion = $1";
sql.opinions.new.planificacions.updateVal = "UPDATE fresh_tour.planificacions SET valoracion = $1 WHERE id = $2 RETURNING valoracion";
sql.opinions.new.hostalaria = {};
sql.opinions.new.hostalaria.insert = "INSERT INTO fresh_tour.comentarios_valoracions_lugares_hostalaria(id_usuario, titulo, data, valoracion, comentario, id_lugar_hostalaria) values ($1, $2, CURRENT_TIMESTAMP, $3, $4, $5) RETURNING id, id_usuario, titulo, to_char(data, 'DD-MM-YY') as data, valoracion, comentario, id_lugar_hostalaria";
sql.opinions.new.hostalaria.media = "SELECT avg(valoracion) as valoracion FROM fresh_tour.comentarios_valoracions_lugares_hostalaria WHERE id_lugar_hostalaria = $1";
sql.opinions.new.hostalaria.updateVal = "UPDATE fresh_tour.lugares_hostalaria SET valoracion = $1 WHERE id = $2 RETURNING valoracion";
sql.opinions.delete = {};
sql.opinions.delete.lugares = "DELETE FROM fresh_tour.comentarios_valoracions_lugares_turisticos WHERE id = $1";
sql.opinions.delete.monumentos = "DELETE FROM fresh_tour.comentarios_valoracions_monumentos WHERE id = $1";
sql.opinions.delete.planificacions = "DELETE FROM fresh_tour.comentarios_valoracions_planificacions WHERE id = $1";
sql.opinions.delete.hostalaria = "DELETE FROM fresh_tour.comentarios_valoracions_lugares_hostalaria WHERE id = $1";
sql.opinions.edit = {};
sql.opinions.edit.lugares = "UPDATE fresh_tour.comentarios_valoracions_lugares_turisticos SET valoracion = $1, titulo = $2, comentario = $3 WHERE id = $4";
sql.opinions.edit.monumentos = "UPDATE fresh_tour.comentarios_valoracions_monumentos SET valoracion = $1, titulo = $2, comentario = $3 WHERE id = $4";
sql.opinions.edit.planificacions = "UPDATE fresh_tour.comentarios_valoracions_planificacions SET valoracion = $1, titulo = $2, comentario = $3 WHERE id = $4";
sql.opinions.edit.hostalaria = "UPDATE fresh_tour.comentarios_valoracions_lugares_hostalaria SET valoracion = $1, titulo = $2, comentario = $3 WHERE id = $4";

sql.hospedaxe = {};
sql.hospedaxe.all = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh ORDER BY valoracion DESC";
sql.hospedaxe.byName = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE titulo is not null and lower(titulo) LIKE lower($2) ORDER BY valoracion DESC";
sql.hospedaxe.hoteis = {};
sql.hospedaxe.hoteis.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'hotel' ORDER BY titulo ASC";
sql.hospedaxe.hoteis.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'hotel' ORDER BY valoracion DESC";
sql.hospedaxe.hostais = {};
sql.hospedaxe.hostais.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'hostel' ORDER BY titulo ASC";
sql.hospedaxe.hostais.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'hostel' ORDER BY valoracion DESC";
sql.hospedaxe.aloxamento = {};
sql.hospedaxe.aloxamento.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'guest_house' ORDER BY titulo ASC";
sql.hospedaxe.aloxamento.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'guest_house' ORDER BY valoracion DESC";
sql.hospedaxe.caravanas = {};
sql.hospedaxe.caravanas.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'caravan_site' ORDER BY titulo ASC";
sql.hospedaxe.caravanas.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'caravan_site' ORDER BY valoracion DESC";
sql.hospedaxe.vivendas = {};
sql.hospedaxe.vivendas.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'apartment' ORDER BY titulo ASC";
sql.hospedaxe.vivendas.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'apartment' ORDER BY valoracion DESC";
sql.hospedaxe.camping = {};
sql.hospedaxe.camping.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'camp_pitch' or lh.sub_tag LIKE 'camp_site' ORDER BY titulo ASC";
sql.hospedaxe.camping.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'camp_pitch' or lh.sub_tag LIKE 'camp_site' ORDER BY valoracion DESC";
sql.hospedaxe.moteis = {};
sql.hospedaxe.moteis.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'motel' ORDER BY titulo ASC";
sql.hospedaxe.moteis.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'motel' ORDER BY valoracion DESC";
sql.hospedaxe.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh ORDER BY titulo ASC";
sql.hospedaxe.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh ORDER BY valoracion DESC";
sql.hospedaxe.fav = {};
sql.hospedaxe.fav.add = "INSERT INTO fresh_tour.lugares_hospedaxe_favoritos (id_lugar_hospedaxe, id_usuario) VALUES ($1, $2)";
sql.hospedaxe.fav.delete = "DELETE FROM fresh_tour.lugares_hospedaxe_favoritos WHERE id_lugar_hospedaxe = $1 and id_usuario = $2";
sql.hospedaxe.fav.byName = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, true AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) AND lower(titulo) like lower($2)";
sql.hospedaxe.fav.hoteis = {};
sql.hospedaxe.fav.hoteis.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'hotel' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC";
sql.hospedaxe.fav.hoteis.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'hotel' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC";
sql.hospedaxe.fav.hostais = {};
sql.hospedaxe.fav.hostais.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'hostel' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC";
sql.hospedaxe.fav.hostais.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'hostel' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC";
sql.hospedaxe.fav.aloxamento = {};
sql.hospedaxe.fav.aloxamento.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'guest_house' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC";
sql.hospedaxe.fav.aloxamento.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'guest_house' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC";
sql.hospedaxe.fav.caravanas = {};
sql.hospedaxe.fav.caravanas.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'caravan_site' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC";
sql.hospedaxe.fav.caravanas.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'caravan_site' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC";
sql.hospedaxe.fav.vivendas = {};
sql.hospedaxe.fav.vivendas.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'apartment' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC";
sql.hospedaxe.fav.vivendas.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'apartment' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC";
sql.hospedaxe.fav.camping = {};
sql.hospedaxe.fav.camping.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'camp_pitch' or lh.sub_tag LIKE 'camp_site' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC";
sql.hospedaxe.fav.camping.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'camp_pitch' or lh.sub_tag LIKE 'camp_site' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC";
sql.hospedaxe.fav.moteis = {};
sql.hospedaxe.fav.moteis.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'motel' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC";
sql.hospedaxe.fav.moteis.valoracon = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE lh.sub_tag LIKE 'motel' and id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC";
sql.hospedaxe.fav.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC";
sql.hospedaxe.fav.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hospedaxe' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE lhf.id_lugar_hospedaxe = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hospedaxe lh WHERE id IN ( SELECT id_lugar_hospedaxe FROM fresh_tour.lugares_hospedaxe_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC";

sql.lecer = {};
sql.lecer.hostalaria = {};
sql.lecer.hostalaria.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.byName = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE titulo is not null and lower(titulo) LIKE lower($2) ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.fav = {};
sql.lecer.hostalaria.fav.add = "INSERT INTO fresh_tour.lugares_hostalaria_favoritos (id_lugar_hostalaria, id_usuario) VALUES ($1, $2)";
sql.lecer.hostalaria.fav.delete = "DELETE FROM fresh_tour.lugares_hostalaria_favoritos WHERE id_lugar_hostalaria = $1 and id_usuario = $2";
sql.lecer.hostalaria.fav.byName = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, true AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) AND lower(titulo) like lower($2) LIMIT 50";
sql.lecer.hostalaria.fav.bares = {};
sql.lecer.hostalaria.fav.bares.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaria' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostaleria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE lh.sub_tag LIKE 'bares' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.fav.bares.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaria' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostaleria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE lh.sub_tag LIKE 'bares' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.fav.restaurantes = {};
sql.lecer.hostalaria.fav.restaurantes.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaria' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostaleria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE lh.sub_tag LIKE 'restaurant' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.fav.restaurantes.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaria' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostaleria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE lh.sub_tag LIKE 'restaurant' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion ASC LIMIT 50";
sql.lecer.hostalaria.fav.cafes = {};
sql.lecer.hostalaria.fav.cafes.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'cafe' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.fav.cafes.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'cafe' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.fav.pubs = {};
sql.lecer.hostalaria.fav.pubs.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'pub' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.fav.pubs.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'pub' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.fav.zonas_comida = {};
sql.lecer.hostalaria.fav.zonas_comida.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'food_court' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.fav.zonas_comida.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'food_court' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.fav.comida_rapida = {};
sql.lecer.hostalaria.fav.comida_rapida.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'fast_food' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.fav.comida_rapida.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'fast_food' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.fav.xeaderias = {};
sql.lecer.hostalaria.fav.xeaderias.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'ice_cream' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.fav.xeaderias.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'ice_cream' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.fav.pastelerias = {};
sql.lecer.hostalaria.fav.pastelerias.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'confectionery' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.fav.pastelerias.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'confectionery' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.fav.panaderias = {};
sql.lecer.hostalaria.fav.panaderias.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'bakery' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.fav.panaderias.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'bakery' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.fav.chocolaterias = {};
sql.lecer.hostalaria.fav.chocolaterias.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'chocolate' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.fav.chocolaterias.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'chocolate' and id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.fav.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.fav.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE id IN ( SELECT id_lugar_hostalaria FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE id_usuario = $1) ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.bares = {};
sql.lecer.hostalaria.bares.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'bar' ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.bares.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'bar' ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.restaurantes = {};
sql.lecer.hostalaria.restaurantes.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'restaurant' ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.restaurantes.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'restaurant' ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.cafes = {};
sql.lecer.hostalaria.cafes.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'cafe' ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.cafes.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'cafe' ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.pubs = {};
sql.lecer.hostalaria.pubs.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'pub' ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.pubs.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'pub' ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.zonas_comida = {};
sql.lecer.hostalaria.zonas_comida.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'food_court' ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.zonas_comida.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'food_court' ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.comida_rapida = {};
sql.lecer.hostalaria.comida_rapida.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'fast_food' ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.comida_rapida.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'fast_food' ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.xeaderias = {};
sql.lecer.hostalaria.xeaderias.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'ice_cream' ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.xeaderias.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'ice_cream' ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.pastelerias = {};
sql.lecer.hostalaria.pastelerias.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'confectionery' ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.pastelerias.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'confectionery' ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.panaderias = {};
sql.lecer.hostalaria.panaderias.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'bakery' ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.panaderias.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'bakery' ORDER BY valoracion DESC LIMIT 50";
sql.lecer.hostalaria.chocolaterias = {};
sql.lecer.hostalaria.chocolaterias.titulo = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'chocolate' ORDER BY titulo ASC LIMIT 50";
sql.lecer.hostalaria.chocolaterias.valoracion = "SELECT id, titulo, sub_tag, valoracion, 'Hostalaría' as tipo, CASE WHEN EXISTS (SELECT 1 FROM fresh_tour.lugares_hostalaria_favoritos lhf WHERE lhf.id_lugar_hostalaria = lh.id AND lhf.id_usuario = $1) THEN CAST(1 AS BOOL) ELSE CAST(0 AS BOOL) END AS favorito FROM fresh_tour.lugares_hostalaria lh WHERE sub_tag LIKE 'chocolate' ORDER BY valoracion DESC LIMIT 50";

module.exports = sql;